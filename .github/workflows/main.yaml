name: wampproto CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup go
        uses: actions/setup-go@v3
        with:
          go-version-file: 'go.mod'
          cache: true
      - run: go version

      - name: Pull in all Go dependencies
        run: |
          go mod vendor

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v8
        with:
          # version of golangci-lint to use in form of v1.2 or v1.2.3 or `latest`
          version: latest
          # skip all additional steps
          skip-pkg-cache: true
          skip-build-cache: true

      - name: Check that code is formatted via go fmt tool
        run: |
          if [ "$(gofmt -s -l . | grep -v vendor | wc -l)" -gt 0 ]; then
            exit 1;
          fi

      - name: Check that go modules are in synced state
        run: |
          go mod tidy -v
          if [ -n "$(git status --porcelain go.mod go.sum)" ]; then
            echo "Go modules are dirty or not in a good state. Please run go mod tidy"
            exit 1;
          fi

      - name: install wampproto-cli
        run: make install-wampproto

      - name: Run unit tests
        run: |
          make test

      - name: Install benchstat
        run: go install golang.org/x/perf/cmd/benchstat@latest

      - name: Run benchmarks and check regression
        run: |
          go test -bench=. -benchmem ./... | tee current.txt
          git fetch origin main
          git checkout origin/main
          go test -bench=. -benchmem ./... | tee baseline.txt
          benchstat baseline.txt current.txt | tee benchdiff.txt
          awk '
          {
              if ($0 ~ /[+-][0-9]+[.0-9]*%/) {
                  match($0, /[+-][0-9]+[.0-9]*%/)
                  value = substr($0, RSTART, RLENGTH)
                  gsub("%", "", value)
                  num = value + 0
                  if (num > 5) {
                      print "Regression detected: " value "% slower -> " $0
                      found = 1
                  } else if (num < -5) {
                      print "Significant speedup: " value "% faster -> " $0
                  }
              }
          }
          END {
              if (found) {
                  exit 1
              } else {
                  print "No regression detected"
                  exit 0
              }
          }' benchdiff.txt
